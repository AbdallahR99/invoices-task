//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITRootsAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class itrootsDBEntities : DbContext
    {
        public itrootsDBEntities()
            : base("name=itrootsDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Invoices> Invoices { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual int DeleteUser(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", iDParameter);
        }
    
        public virtual ObjectResult<LoginUser_Result> LoginUser(string username, string pasword)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var paswordParameter = pasword != null ?
                new ObjectParameter("Pasword", pasword) :
                new ObjectParameter("Pasword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginUser_Result>("LoginUser", usernameParameter, paswordParameter);
        }
    
        public virtual int SaveUser(Nullable<int> iD, string fullName, string username, string password, string email, string phone, Nullable<bool> isAdmin, Nullable<bool> isAdd)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var isAddParameter = isAdd.HasValue ?
                new ObjectParameter("IsAdd", isAdd) :
                new ObjectParameter("IsAdd", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveUser", iDParameter, fullNameParameter, usernameParameter, passwordParameter, emailParameter, phoneParameter, isAdminParameter, isAddParameter);
        }
    
        public virtual ObjectResult<SelectUserList_Result> SelectUserList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUserList_Result>("SelectUserList");
        }
    }
}
